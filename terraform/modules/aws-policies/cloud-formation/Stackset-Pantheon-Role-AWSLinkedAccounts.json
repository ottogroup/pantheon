{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "RoleParamIsProvided": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "RoleARN"
            },
            ""
          ]
        }
      ]
    },
    "Standard": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Partition"
        },
        "aws"
      ]
    }
  },
  "Description": "Pantheon audit access",
  "Outputs": {
    "PantheonServiceAccountId": {
      "Description": "Your External ID",
      "Value": {
        "Ref": "PantheonServiceAccountId"
      }
    },
    "RoleARNID": {
      "Description": "Your Role ARN ID",
      "Value": {
        "Fn::GetAtt": [
          "Role",
          "Arn"
        ]
      }
    }
  },
  "Parameters": {
    "PantheonServiceAccountId": {
      "AllowedPattern": "^[0-9]*$",
      "Description": "GCP service account id used to scan resources. Will be provided by the Pantheon provided.",
      "Type": "String"
    },
    "RoleARN": {
      "Default": "",
      "Description": "Enter Role ARN, leave empty for default",
      "Type": "String"
    },
    "PantheonRoleName": {
      "Default": "PantheonAccess-Role",
      "Description": "Enter the role name that will be installed on your account, the default is PantheonAccess-Role",
      "Type": "String"
    }
  },
  "Resources": {
    "Role": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "accounts.google.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "accounts.google.com:sub": {
                    "Ref": "PantheonServiceAccountId"
                  },
                  "accounts.google.com:oaud": "https://www.pantheon.app.ottogroupdata.works"
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/job-function/ViewOnlyAccess"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/SecurityAudit"
          }
        ],
        "RoleName": {
          "Ref": "PantheonRoleName"
        }
      },
      "Type": "AWS::IAM::Role"
    },
    "PantheonFullPolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:GetAccountConfiguration",
                "apigatewayv2:GetApi",
                "apigatewayv2:GetApis",
                "apigatewayv2:GetAuthorizer",
                "apigatewayv2:GetAuthorizers",
                "apigatewayv2:GetDeployment",
                "apigatewayv2:GetDeployments",
                "apigatewayv2:GetDomainNames",
                "apigatewayv2:GetIntegration",
                "apigatewayv2:GetIntegrationResponse",
                "apigatewayv2:GetIntegrationResponses",
                "apigatewayv2:GetIntegrations",
                "apigatewayv2:GetApiMapping",
                "apigatewayv2:GetApiMappings",
                "apigatewayv2:GetModel",
                "apigatewayv2:GetModelTemplate",
                "apigatewayv2:GetModels",
                "apigatewayv2:GetRoute",
                "apigatewayv2:GetRouteResponse",
                "apigatewayv2:GetRouteResponses",
                "apigatewayv2:GetRoutes",
                "apigatewayv2:GetStage",
                "apigatewayv2:GetStages",
                "apigatewayv2:GetVpcLink",
                "apigatewayv2:GetVpcLinks",
                "aps:ListWorkspaces",
                "athena:GetCatalogs",
                "athena:GetDataCatalog",
                "athena:GetDatabase",
                "athena:GetNamedQuery",
                "athena:GetQueryExecution",
                "athena:GetQueryExecutions",
                "athena:GetTable",
                "athena:GetTableMetadata",
                "athena:GetTables",
                "athena:GetWorkGroup",
                "backup:DescribeBackupJob",
                "backup:DescribeBackupVault",
                "backup:GetBackupSelection",
                "backup:DescribeCopyJob",
                "backup:DescribeFramework",
                "backup:DescribeGlobalSettings",
                "backup:DescribeProtectedResource",
                "backup:DescribeRecoveryPoint",
                "backup:GetBackupPlan",
                "backup:GetRecoveryPointRestoreMetadata",
                "backup:DescribeReportJob",
                "backup:DescribeReportPlan",
                "backup:GetBackupVaultAccessPolicy",
                "backup:GetBackupVaultNotifications",
                "backup:GetSupportedResourceTypes",
                "backup:ListBackupJobs",
                "backup:ListBackupPlanTemplates",
                "backup:ListBackupPlans",
                "backup:ListBackupPlanVersions",
                "backup:ListBackupSelections",
                "backup:ListBackupVaults",
                "backup:ListCopyJobs",
                "backup:ListFrameworks",
                "backup:ListProtectedResources",
                "backup:ListRecoveryPointsByResource",
                "backup:ListReportJobs",
                "backup:ListReportPlans",
                "backup:ListRestoreJobs",
                "backup:ListTags",
                "cloudhsm:DescribeBackups",
                "cloudhsm:DescribeClusters",
                "cloudhsm:DescribeHapg",
                "cloudhsm:DescribeHsm",
                "cloudhsm:DescribeLunaClient",
                "cloudhsm:ListHapgs",
                "cloudhsm:ListHsms",
                "cloudhsm:ListLunaClients",
                "cloudhsm:ListTags",
                "cloudsearch:ListDomainNames",
                "cloudtrail:DescribeQuery",
                "cloudtrail:GetChannel",
                "cloudtrail:GetEventDataStore",
                "cloudtrail:GetInsightSelectors",
                "cloudtrail:GetQueryResults",
                "cloudtrail:ListChannels",
                "cloudtrail:ListEventDataStores",
                "cloudtrail:ListImports",
                "cloudtrail:ListPublicKeys",
                "cloudtrail:ListQueries",
                "cloudtrail:ListTrails",
                "cloudwatch:ListMetricStreams",
                "cloudwatch:ListMetrics",
                "codeartifact:DescribeDomain",
                "codeartifact:DescribeRepository",
                "codeartifact:ListDomains",
                "codeartifact:ListPackages",
                "codeartifact:ListRepositoriesInDomain",
                "codebuild:BatchGetProjects",
                "codebuild:GetResourcePolicy",
                "codebuild:ListBuildBatches",
                "codebuild:ListBuildBatchesForProject",
                "codebuild:ListBuilds",
                "codebuild:ListCuratedEnvironmentImages",
                "codebuild:ListProjects",
                "codebuild:ListSharedProjects",
                "codebuild:ListSourceCredentials",
                "codepipeline:ListActionTypes",
                "codepipeline:ListWebhooks",
                "cognito-identity:DescribeIdentityPool",
                "connect:ListApprovedOrigins",
                "connect:ListInstanceAttributes",
                "connect:ListInstanceStorageConfigs",
                "connect:ListInstances",
                "connect:ListIntegrationAssociations",
                "connect:ListLambdaFunctions",
                "connect:ListLexBots",
                "connect:ListSecurityKeys",
                "dms:ListTagsForResource",
                "docdb:DescribeCertificates",
                "docdb:DescribeDBClusterParameterGroups",
                "docdb:DescribeDBClusterParameters",
                "docdb:DescribeDBClusterSnapshots",
                "docdb:DescribeDBClusters",
                "docdb:DescribeDBEngineVersions",
                "docdb:DescribeDBInstances",
                "docdb:DescribeDBSubnetGroups",
                "docdb:DescribeEventCategories",
                "docdb:DescribeEventSubscriptions",
                "docdb:DescribeEvents",
                "docdb:DescribeGlobalClusters",
                "docdb:DescribePendingMaintenanceActions",
                "dynamodb:DescribeBackup",
                "dynamodb:DescribeExport",
                "dynamodb:DescribeImport",
                "dynamodb:DescribeKinesisStreamingDestination",
                "dynamodb:DescribeTableReplicaAutoScaling",
                "dynamodb:ListExports",
                "dynamodb:ListImports",
                "ec2:GetAssociatedEnclaveCertificateIamRoles",
                "ec2:GetAssociatedIpv6PoolCidrs",
                "ec2:GetCapacityReservationUsage",
                "ec2:GetCoipPoolUsage",
                "ec2:GetEbsDefaultKmsKeyId",
                "ec2:GetEbsEncryptionByDefault",
                "ec2:GetIpamPoolAllocations",
                "ec2:GetIpamResourceCidrs",
                "ec2:GetSerialConsoleAccessStatus",
                "ec2:GetSubnetCidrReservations",
                "ec2:GetTransitGatewayPolicyTableAssociations",
                "ec2:GetVpnConnectionDeviceTypes",
                "ec2:ListFirewallPolicies",
                "ec2:ListFirewalls",
                "ec2:ListImagesInRecycleBin",
                "ec2:ListRuleGroups",
                "ec2:ListSnapshotsInRecycleBin",
                "ecr-public:ListTagsForResource",
                "ecr:BatchGetImage",
                "ecr:DescribeImageTags",
                "ecr:DescribePullThroughCacheRules",
                "ecr:DescribeRegistries",
                "ecr:DescribeRegistry",
                "ecr:GetLifecyclePolicyPreview",
                "ecr:GetRegistryCatalogData",
                "ecr:GetRegistryPolicy",
                "ecr:GetRepositoryCatalogData",
                "efs:DescribeAccessPoints",
                "efs:DescribeAccountPreferences",
                "efs:DescribeFileSystems",
                "efs:DescribeMountTargets",
                "efs:DescribeReplicationConfigurations",
                "eks:DescribeAddonVersions",
                "eks:ListTagsForResource"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PantheonFullPolicy",
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "PantheonFullPolicy2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "elasticache:ListAllowedNodeTypeModifications",
                "elasticfilesystem:DescribeAccessPoints",
                "elasticfilesystem:DescribeFileSystemPolicy",
                "elasticloadbalancingv2:DescribeAccountLimits",
                "elasticloadbalancingv2:DescribeListenerCertificates",
                "elasticloadbalancingv2:DescribeListeners",
                "elasticloadbalancingv2:DescribeLoadBalancerAttributes",
                "elasticloadbalancingv2:DescribeLoadBalancers",
                "elasticloadbalancingv2:DescribeRules",
                "elasticloadbalancingv2:DescribeSSLPolicies",
                "elasticloadbalancingv2:DescribeTargetGroupAttributes",
                "elasticloadbalancingv2:DescribeTargetGroups",
                "elasticloadbalancingv2:DescribeTargetHealth",
                "elasticmapreduce:GetAutoTerminationPolicy",
                "elasticmapreduce:GetManagedScalingPolicy",
                "elasticmapreduce:ListBootstrapActions",
                "elasticmapreduce:ListInstanceFleets",
                "elasticmapreduce:ListInstanceGroups",
                "elasticmapreduce:ListNotebookExecutions",
                "elasticmapreduce:ListSteps",
                "elasticmapreduce:ListStudioSessionMappings",
                "elasticmapreduce:ListStudios",
                "es:GetCompatibleElasticsearchVersions",
                "es:GetUpgradeHistory",
                "es:GetUpgradeStatus",
                "es:ListElasticsearchVersions",
                "es:ListPackagesForDomain",
                "es:ListVpcEndpointAccess",
                "es:ListVpcEndpoints",
                "es:ListVpcEndpointsForDomain",
                "emr:DescribeJobFlows",
                "emr:DescribeReleaseLabel",
                "emr:GetBlockPublicAccessConfiguration",
                "emr:ListClusters",
                "emr:ListNotebookExecutions",
                "emr:ListReleaseLabels",
                "emr:ListSecurityConfigurations",
                "emr:ListStudioSessionMappings",
                "emr:ListStudios",
                "emr-containers:ListJobRuns",
                "emr-containers:ListJobTemplates",
                "emr-containers:ListManagedEndpoints",
                "emr-containers:ListVirtualClusters",
                "emrserverless:ListApplications",
                "fms:GetNotificationChannel",
                "fms:ListAppsLists",
                "fms:ListProtocolsLists",
                "fms:ListResourceSets",
                "glacier:GetDataRetrievalPolicy",
                "glacier:GetVaultLock",
                "glacier:GetVaultNotifications",
                "glacier:ListJobs",
                "glacier:ListMultipartUploads",
                "glacier:ListProvisionedCapacity",
                "glacier:ListTagsForVault",
                "glue:BatchGetCrawlers",
                "glue:BatchGetDevEndpoints",
                "glue:BatchGetTriggers",
                "glue:GetCatalogImportStatus",
                "glue:GetClassifier",
                "glue:GetClassifiers",
                "glue:GetConnections",
                "glue:GetCrawler",
                "glue:GetDatabase",
                "glue:GetDatabases",
                "glue:GetDevEndpoint",
                "glue:GetJob",
                "glue:GetJobBookmark",
                "glue:GetJobRun",
                "glue:GetJobRuns",
                "glue:GetMLTaskRun",
                "glue:GetMLTaskRuns",
                "glue:GetMLTransform",
                "glue:GetMLTransforms",
                "glue:GetMapping",
                "glue:GetPartition",
                "glue:GetPartitionIndexes",
                "glue:GetPartitions",
                "glue:GetPlan",
                "glue:GetRegistry",
                "glue:GetResourcePolicies",
                "glue:GetSchema",
                "glue:GetSchemaByDefinition",
                "glue:GetSchemaVersion",
                "glue:GetSchemaVersionsDiff",
                "glue:GetSecurityConfiguration",
                "glue:GetSecurityConfigurations",
                "glue:GetSession",
                "glue:GetTable",
                "glue:GetTable*",
                "glue:GetTableVersion",
                "glue:GetTableVersions",
                "glue:GetTables",
                "glue:GetTags",
                "glue:GetTrigger",
                "glue:GetTriggers",
                "glue:GetUserDefinedFunction",
                "glue:GetUserDefinedFunctions",
                "glue:GetWorkflow",
                "glue:GetWorkflowRun",
                "glue:GetWorkflowRunProperties",
                "glue:GetWorkflowRuns",
                "glue:ListBlueprints",
                "glue:ListCrawlers",
                "glue:ListCrawls",
                "glue:ListCustomEntityTypes",
                "glue:ListDevEndpoints",
                "glue:ListJobs",
                "glue:ListMLTransforms",
                "glue:ListRegistries",
                "glue:ListSchemas",
                "glue:ListSessions",
                "glue:ListTriggers",
                "glue:ListWorkflows",
                "guardduty:DescribeMalwareScans",
                "guardduty:DescribeOrganizationConfiguration",
                "health:DescribeAffectedAccountsForOrganization",
                "health:DescribeAffectedEntities",
                "health:DescribeAffectedEntitiesForOrganization",
                "health:DescribeEntityAggregates",
                "health:DescribeEventAggregates",
                "health:DescribeEventDetails",
                "health:DescribeEventDetailsForOrganization",
                "health:DescribeEventTypes",
                "health:DescribeEvents",
                "health:DescribeEventsForOrganization",
                "health:DescribeHealthServiceStatusForOrganization",
                "identitystore:Describe*",
                "identitystore:List*",
                "inspector2:ListMembers",
                "iot:GetBehaviorModelTrainingSummaries",
                "iot:GetEffectivePolicies",
                "iot:GetIndexingConfiguration",
                "iot:GetLoggingOptions",
                "iot:GetRegistrationCode",
                "iot:GetV2LoggingOptions",
                "ivs:ListLoggingConfigurations",
                "ivs:ListRooms",
                "kafka:ListClusters",
                "kendra:DescribeIndex",
                "kendra:ListDataSources",
                "kendra:ListIndices",
                "kendra:ListTagsForResource",
                "kinesisanalytics:DescribeApplication",
                "kinesisanalytics:ListApplications",
                "kinesisanalytics:ListTagsForResource",
                "kinesisvideo:DescribeImageGenerationConfiguration",
                "kinesisvideo:ListStreams",
                "kinesisvideo:ListTagsForStream",
                "kms:GetKeyRotationStatus",
                "kms:ListResourceTags",
                "lambda:GetCodeSigningConfig",
                "lambda:GetFunction",
                "lambda:GetFunctionCodeSigningConfig",
                "lambda:GetFunctionConcurrency",
                "lambda:GetFunctionUrlConfig",
                "logs:GetLogGroupFields",
                "logs:ListTagsForResource",
                "m2:ListApplications",
                "m2:ListEngineVersions",
                "m2:ListEnvironments",
                "memorydb:DescribeACLs",
                "memorydb:DescribeEngineVersions",
                "memorydb:DescribeEvents",
                "memorydb:DescribeParameterGroups",
                "memorydb:DescribeParameters",
                "memorydb:DescribeServiceUpdates",
                "memorydb:DescribeSnapshots",
                "memorydb:DescribeSubnetGroups",
                "memorydb:DescribeUsers",
                "memorydb:ListAllowedNodeTypeUpdates"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PantheonFullPolicy2",
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "PantheonFullPolicy3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "networkmanager:DescribeGlobalNetworks",
                "networkmanager:GetConnectAttachment",
                "networkmanager:GetConnectPeerAssociations",
                "networkmanager:GetConnections",
                "networkmanager:GetCustomerGatewayAssociations",
                "networkmanager:GetDevices",
                "networkmanager:GetLinkAssociations",
                "networkmanager:GetLinks",
                "networkmanager:GetNetworkResourceCounts",
                "networkmanager:GetNetworkResourceRelationships",
                "networkmanager:GetNetworkResources",
                "networkmanager:GetNetworkTelemetry",
                "networkmanager:GetSiteToSiteVpnAttachment",
                "networkmanager:GetSites",
                "networkmanager:GetTransitGatewayConnectPeerAssociations",
                "networkmanager:GetTransitGatewayPeering",
                "networkmanager:GetTransitGatewayRegistrations",
                "networkmanager:GetTransitGatewayRouteTableAttachment",
                "networkmanager:GetVpcAttachment",
                "networkmanager:ListAttachments",
                "networkmanager:ListConnectPeers",
                "networkmanager:ListCoreNetworks",
                "networkmanager:ListPeerings",
                "profile:GetDomain",
                "profile:ListDomains",
                "profile:ListIntegrations",
                "redshiftserverless:GetNamespace",
                "redshiftserverless:GetRecoveryPoint",
                "redshiftserverless:GetSnapshot",
                "redshiftserverless:GetUsageLimit",
                "redshiftserverless:GetWorkgroup",
                "redshiftserverless:ListEndpointAccess",
                "redshiftserverless:ListNamespaces",
                "redshiftserverless:ListRecoveryPoints",
                "redshiftserverless:ListSnapshots",
                "redshiftserverless:ListUsageLimits",
                "redshiftserverless:ListWorkgroups",
                "route53-recovery-cluster:GetRoutingControlState",
                "route53-recovery-cluster:ListRoutingControls",
                "route53-recovery-control-config:DescribeCluster",
                "route53-recovery-control-config:DescribeControlPanel",
                "route53-recovery-control-config:DescribeRoutingControl",
                "route53-recovery-control-config:ListAssociatedRoute53HealthChecks",
                "route53-recovery-control-config:ListClusters",
                "route53-recovery-control-config:ListControlPanels",
                "route53-recovery-control-config:ListRoutingControls",
                "route53-recovery-control-config:ListSafetyRules",
                "route53-recovery-readiness:ListCells",
                "route53-recovery-readiness:ListCrossAccountAuthorizations",
                "route53-recovery-readiness:ListReadinessChecks",
                "route53-recovery-readiness:ListRecoveryGroups",
                "route53-recovery-readiness:ListResourceSets",
                "route53-recovery-readiness:ListRules",
                "route53domains:GetContactReachabilityStatus",
                "route53domains:ListPrices",
                "s3:GetAccessPointConfigurationForObjectLambda",
                "s3:GetAccessPointPolicyForObjectLambda",
                "s3:GetAccessPointPolicyStatusForObjectLambda",
                "s3:GetAccessPointForObjectLambda",
                "s3:GetStorageLensConfiguration",
                "s3:GetStorageLensConfigurationTagging",
                "s3:GetBucketNotification",
                "s3:GetMultiRegionAccessPoint",
                "s3:GetMultiRegionAccessPointPolicy",
                "s3:GetMultiRegionAccessPointPolicyStatus",
                "s3:GetPublicAccessBlock",
                "s3:ListAccessPointsForObjectLambda",
                "s3:ListBucketIntelligentTieringConfigurations",
                "s3:ListBuckets",
                "s3:ListJobs",
                "s3:ListMultiRegionAccessPoints",
                "s3:ListStorageLensConfigurations",
                "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
                "ses:GetContactList",
                "ses:GetDedicatedIpPool",
                "ses:GetDeliverabilityDashboardOptions",
                "ses:GetIdentityMailFromDomainAttributes",
                "ses:GetIdentityNotificationAttributes",
                "ses:GetSendQuota",
                "ses:GetSendStatistics",
                "ses:DescribeActiveReceiptRuleSet",
                "ses:GetAccount",
                "ses:GetConfigurationSet",
                "ses:GetConfigurationSetEventDestinations",
                "ses:GetDedicatedIps",
                "ses:GetEmailIdentity",
                "ses:ListConfigurationSets",
                "ses:ListContactLists",
                "ses:ListContacts",
                "ses:ListCustomVerificationEmailTemplates",
                "ses:ListCustomVerificationEmailTemplates",
                "ses:ListDedicatedIpPools",
                "ses:ListDeliverabilityTestReports",
                "ses:ListEmailIdentities",
                "ses:ListEmailTemplates",
                "ses:ListImportJobs",
                "ses:ListReceiptFilters",
                "ses:ListRecommendations",
                "ses:ListSuppressedDestinations",
                "ses:ListTemplates",
                "ssm-sap:GetApplication",
                "ssm-sap:GetDatabase",
                "ssm-sap:ListApplications",
                "ssm-sap:ListComponents",
                "ssm-sap:ListDatabases",
                "sns:GetEndpointAttributes",
                "sns:GetSMSAttributes",
                "sns:GetSMSSandboxAccountStatus",
                "sns:GetSubscriptionAttributes",
                "sns:ListEndpointsByPlatformApplication",
                "sns:ListOriginationNumbers",
                "sns:ListPhoneNumbersOptedOut",
                "sns:ListPlatformApplications",
                "sns:ListSMSSandboxPhoneNumbers",
                "ssm:GetDefaultPatchBaseline",
                "ssm:GetDocument",
                "ssm:GetInventory",
                "ssm:GetInventorySchema",
                "ssm:GetOpsMetadata",
                "ssm:GetOpsSummary",
                "ssm:ListCommandInvocations",
                "ssm:ListOpsItemEvents",
                "ssm:ListOpsItemRelatedItems",
                "sso-directory:Describe*",
                "sso-directory:ListMembersInGroup",
                "states:ListActivities",
                "timestream:DescribeDatabase",
                "timestream:DescribeEndpoints",
                "timestream:ListDatabases",
                "timestream:ListTables",
                "voiceid:DescribeDomain",
                "waf:ListActivatedRulesInRuleGroup",
                "waf:ListByteMatchSets",
                "waf:ListGeoMatchSets",
                "waf:ListIPSets",
                "waf:ListLoggingConfigurations",
                "waf:ListRateBasedRules",
                "waf:ListRegexMatchSets",
                "waf:ListRegexPatternSets",
                "waf:ListRuleGroups",
                "waf:ListRules",
                "waf:ListSizeConstraintSets",
                "waf:ListSqlInjectionMatchSets",
                "waf:ListSubscribedRuleGroups",
                "waf:ListXssMatchSets",
                "waf-regional:ListActivatedRulesInRuleGroup",
                "waf-regional:ListByteMatchSets",
                "waf-regional:ListGeoMatchSets",
                "waf-regional:ListIPSets",
                "waf-regional:ListLoggingConfigurations",
                "waf-regional:ListRateBasedRules",
                "waf-regional:ListRegexMatchSets",
                "waf-regional:ListRegexPatternSets",
                "waf-regional:ListRuleGroups",
                "waf-regional:ListRules",
                "waf-regional:ListSizeConstraintSets",
                "waf-regional:ListSqlInjectionMatchSets",
                "waf-regional:ListSubscribedRuleGroups",
                "waf-regional:ListXssMatchSets",
                "wafv2:GetLoggingConfiguration",
                "wafv2:GetRuleGroup",
                "wafv2:GetWebACLForResource",
                "wisdom:GetAssistant",
                "xray:GetSamplingStatisticSummaries",
                "xray:ListResourcePolicies"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PantheonFullPolicy3",
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    }
  }
}