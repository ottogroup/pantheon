{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "RoleParamIsProvided": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "RoleARN"
            },
            ""
          ]
        }
      ]
    },
    "Standard": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Partition"
        },
        "aws"
      ]
    }
  },
  "Description": "Pantheon audit access",
  "Outputs": {
    "PantheonServiceAccountId": {
      "Description": "Your External ID",
      "Value": {
        "Ref": "PantheonServiceAccountId"
      }
    },
    "RoleARNID": {
      "Description": "Your Role ARN ID",
      "Value": {
        "Fn::GetAtt": [
          "Role",
          "Arn"
        ]
      }
    }
  },
  "Parameters": {
    "PantheonServiceAccountId": {
      "AllowedPattern": "^[0-9]*$",
      "Description": "GCP service account id used to scan resources. Will be provided by the Pantheon provided.",
      "Type": "String"
    },
    "RoleARN": {
      "Default": "",
      "Description": "Enter Role ARN, leave empty for default",
      "Type": "String"
    },
    "PantheonRoleName": {
      "Default": "pantheon-audit-access",
      "Description": "Enter the role name that will be installed on your account, the default is PantheonAccess-Role",
      "Type": "String"
    }
  },
  "Resources": {
    "Role": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "accounts.google.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "accounts.google.com:sub": {
                    "Ref": "PantheonServiceAccountId"
                  },
                  "accounts.google.com:oaud": "https://www.pantheon.app.ottogroupdata.works"
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/job-function/ViewOnlyAccess"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/SecurityAudit"
          },
          {
            "Ref": "PantheonFullPolicy0"
          },
          {
            "Ref": "PantheonFullPolicy1"
          },
          {
            "Ref": "PantheonFullPolicy2"
          },
          {
            "Ref": "PantheonFullPolicy3"
          },
          {
            "Ref": "PantheonFullPolicy4"
          }
        ],
        "RoleName": {
          "Ref": "PantheonRoleName"
        }
      },
      "Type": "AWS::IAM::Role"
    },
    "PantheonFullPolicy0": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:GetAccountConfiguration",
                "aps:DescribeAlertManagerDefinition",
                "aps:DescribeLoggingConfiguration",
                "aps:DescribeRuleGroupsNamespace",
                "aps:DescribeScraper",
                "aps:DescribeWorkspace",
                "aps:ListRuleGroupsNamespaces",
                "aps:ListScrapers",
                "aps:ListTagsForResource",
                "aps:ListWorkspaces",
                "athena:GetCatalogs",
                "athena:GetDatabase",
                "athena:GetDataCatalog",
                "athena:GetNamedQuery",
                "athena:GetQueryExecution",
                "athena:GetQueryExecutions",
                "athena:GetSession",
                "athena:GetSessionStatus",
                "athena:GetTable",
                "athena:GetTableMetadata",
                "athena:GetTables",
                "athena:GetWorkGroup",
                "backup:DescribeBackupJob",
                "backup:DescribeBackupVault",
                "backup:DescribeCopyJob",
                "backup:DescribeFramework",
                "backup:DescribeGlobalSettings",
                "backup:DescribeProtectedResource",
                "backup:DescribeRecoveryPoint",
                "backup:DescribeReportJob",
                "backup:DescribeReportPlan",
                "backup:GetBackupPlan",
                "backup:GetBackupSelection",
                "backup:GetBackupVaultAccessPolicy",
                "backup:GetBackupVaultNotifications",
                "backup:GetLegalHold",
                "backup:GetRecoveryPointRestoreMetadata",
                "backup:GetRestoreJobMetadata",
                "backup:ListBackupJobs",
                "backup:ListBackupPlans",
                "backup:ListBackupPlanTemplates",
                "backup:ListBackupPlanVersions",
                "backup:ListBackupSelections",
                "backup:ListBackupVaults",
                "backup:ListCopyJobs",
                "backup:ListFrameworks",
                "backup:ListLegalHolds",
                "backup:ListProtectedResources",
                "backup:ListRecoveryPointsByResource",
                "backup:ListReportJobs",
                "backup:ListReportPlans",
                "backup:ListRestoreJobs",
                "backup:ListRestoreJobSummaries",
                "backup:ListRestoreTestingPlans",
                "backup:ListTags",
                "cloudfront:DescribeKeyValueStore",
                "cloudhsm:DescribeBackups",
                "cloudhsm:DescribeClusters",
                "cloudhsm:DescribeHapg",
                "cloudhsm:DescribeHsm",
                "cloudhsm:DescribeLunaClient",
                "cloudhsm:GetResourcePolicy",
                "cloudhsm:ListHapgs",
                "cloudhsm:ListHsms",
                "cloudhsm:ListLunaClients",
                "cloudhsm:ListTags",
                "cloudsearch:ListDomainNames",
                "cloudtrail:DescribeQuery",
                "cloudtrail:GetChannel",
                "cloudtrail:GetDashboard",
                "cloudtrail:GetEventDataStore",
                "cloudtrail:GetInsightSelectors",
                "cloudtrail:GetQueryResults",
                "cloudtrail:ListChannels",
                "cloudtrail:ListDashboards",
                "cloudtrail:ListEventDataStores",
                "cloudtrail:ListImports",
                "cloudtrail:ListPublicKeys",
                "cloudtrail:ListQueries",
                "cloudtrail:ListTrails",
                "cloudwatch:ListMetrics",
                "cloudwatch:ListMetricStreams",
                "codeartifact:DescribeDomain",
                "codeartifact:DescribePackageGroup",
                "codeartifact:DescribeRepository",
                "codeartifact:ListAssociatedPackages",
                "codeartifact:ListDomains",
                "codeartifact:ListPackageGroups",
                "codeartifact:ListPackages",
                "codeartifact:ListRepositoriesInDomain",
                "codeartifact:ListSubPackageGroups",
                "codeartifact:ListTagsForResource",
                "codebuild:BatchGetBuilds",
                "codebuild:BatchGetProjects",
                "codebuild:GetResourcePolicy",
                "codebuild:ListBuildBatches",
                "codebuild:ListBuildBatchesForProject",
                "codebuild:ListBuilds",
                "codebuild:ListFleets",
                "codebuild:ListProjects",
                "codebuild:ListSharedProjects",
                "codebuild:ListSourceCredentials",
                "codepipeline:ListRuleExecutions",
                "codepipeline:ListRuleTypes",
                "codepipeline:ListTagsForResource",
                "codepipeline:ListWebhooks",
                "cognito-identity:DescribeIdentityPool",
                "connect:ListApprovedOrigins",
                "connect:ListInstanceAttributes",
                "connect:ListInstances",
                "connect:ListInstanceStorageConfigs",
                "connect:ListIntegrationAssociations",
                "connect:ListLambdaFunctions",
                "connect:ListLexBots",
                "connect:ListSecurityKeys",
                "dms:ListTagsForResource",
                "dynamodb:DescribeBackup",
                "dynamodb:DescribeExport",
                "dynamodb:DescribeImport",
                "dynamodb:DescribeKinesisStreamingDestination",
                "dynamodb:DescribeTableReplicaAutoScaling",
                "dynamodb:ListExports",
                "dynamodb:ListImports",
                "ec2:GetAllowedImagesSettings",
                "ec2:GetAssociatedEnclaveCertificateIamRoles",
                "ec2:GetAssociatedIpv6PoolCidrs",
                "ec2:GetCapacityReservationUsage",
                "ec2:GetCoipPoolUsage",
                "ec2:GetEbsDefaultKmsKeyId"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "apigateway:GET"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Deny",
              "Action": [
                "apigateway:GET"
              ],
              "Resource": [
                "arn:aws:apigateway:*::/apikeys/*",
                "arn:aws:apigateway:*::/apikeys"
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyName": "PantheonFullPolicy0"
      },
      "Type": "AWS::IAM::ManagedPolicy"
    },
    "PantheonFullPolicy1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:GetEbsEncryptionByDefault",
                "ec2:GetIpamPoolAllocations",
                "ec2:GetIpamResourceCidrs",
                "ec2:GetSecurityGroupsForVpc",
                "ec2:GetSerialConsoleAccessStatus",
                "ec2:GetSnapshotBlockPublicAccessState",
                "ec2:GetSubnetCidrReservations",
                "ec2:GetTransitGatewayPolicyTableAssociations",
                "ec2:GetVerifiedAccessEndpointPolicy",
                "ec2:GetVerifiedAccessEndpointTargets",
                "ec2:GetVerifiedAccessGroupPolicy",
                "ec2:ListImagesInRecycleBin",
                "ec2:ListSnapshotsInRecycleBin",
                "ecr-public:DescribeImageTags",
                "ecr-public:DescribeRegistries",
                "ecr-public:GetRegistryCatalogData",
                "ecr-public:GetRepositoryCatalogData",
                "ecr-public:ListTagsForResource",
                "ecr:BatchGetImage",
                "ecr:DescribeImageReplicationStatus",
                "ecr:DescribePullThroughCacheRules",
                "ecr:DescribeRegistry",
                "ecr:DescribeRepositoryCreationTemplates",
                "ecr:GetLifecyclePolicy",
                "ecr:GetLifecyclePolicyPreview",
                "ecr:GetRegistryPolicy",
                "eks:DescribeAddon",
                "eks:DescribeAddonVersions",
                "eks:DescribeEksAnywhereSubscription",
                "eks:DescribeIdentityProviderConfig",
                "eks:DescribeInsight",
                "eks:ListAccessEntries",
                "eks:ListAccessPolicies",
                "eks:ListAddons",
                "eks:ListEksAnywhereSubscriptions",
                "eks:ListIdentityProviderConfigs",
                "eks:ListInsights",
                "eks:ListPodIdentityAssociations",
                "eks:ListTagsForResource",
                "elasticache:ListAllowedNodeTypeModifications",
                "elasticfilesystem:DescribeAccessPoints",
                "elasticfilesystem:DescribeAccountPreferences",
                "elasticfilesystem:DescribeFileSystemPolicy",
                "elasticfilesystem:DescribeFileSystems",
                "elasticfilesystem:DescribeMountTargets",
                "elasticfilesystem:DescribeReplicationConfigurations",
                "elasticfilesystem:ListTagsForResource",
                "elasticloadbalancing:DescribeAccountLimits",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:GetTrustStoreCaCertificatesBundle",
                "elasticmapreduce:DescribeJobFlows",
                "elasticmapreduce:DescribeReleaseLabel",
                "elasticmapreduce:GetAutoTerminationPolicy",
                "elasticmapreduce:GetBlockPublicAccessConfiguration",
                "elasticmapreduce:GetManagedScalingPolicy",
                "elasticmapreduce:ListBootstrapActions",
                "elasticmapreduce:ListClusters",
                "elasticmapreduce:ListInstanceFleets",
                "elasticmapreduce:ListInstanceGroups",
                "elasticmapreduce:ListNotebookExecutions",
                "elasticmapreduce:ListReleaseLabels",
                "elasticmapreduce:ListSecurityConfigurations",
                "elasticmapreduce:ListSteps",
                "elasticmapreduce:ListStudios",
                "elasticmapreduce:ListStudioSessionMappings",
                "emr-containers:DescribeJobRun",
                "emr-containers:DescribeJobTemplate",
                "emr-containers:DescribeManagedEndpoint",
                "emr-containers:DescribeSecurityConfiguration",
                "emr-containers:DescribeVirtualCluster",
                "emr-containers:ListJobRuns",
                "emr-containers:ListJobTemplates",
                "emr-containers:ListManagedEndpoints",
                "emr-containers:ListSecurityConfigurations",
                "emr-containers:ListTagsForResource",
                "emr-containers:ListVirtualClusters",
                "emr-serverless:GetJobRun",
                "emr-serverless:ListApplications",
                "emr-serverless:ListTagsForResource",
                "es:GetApplication",
                "es:GetCompatibleElasticsearchVersions",
                "es:GetDataSource",
                "es:GetDirectQueryDataSource",
                "es:GetUpgradeHistory",
                "es:GetUpgradeStatus",
                "es:ListApplications",
                "es:ListDataSources",
                "es:ListDirectQueryDataSources",
                "es:ListDomainMaintenances",
                "es:ListElasticsearchVersions",
                "es:ListPackagesForDomain",
                "es:ListScheduledActions",
                "es:ListVpcEndpointAccess",
                "es:ListVpcEndpoints",
                "es:ListVpcEndpointsForDomain",
                "fms:GetAdminScope",
                "fms:GetNotificationChannel",
                "fms:GetPolicy",
                "fms:GetProtectionStatus",
                "fms:ListAdminAccountsForOrganization",
                "fms:ListAdminsManagingAccount",
                "fms:ListAppsLists",
                "fms:ListProtocolsLists",
                "fms:ListResourceSets",
                "glacier:GetDataRetrievalPolicy",
                "glacier:GetVaultLock",
                "glacier:GetVaultNotifications",
                "glacier:ListJobs",
                "glacier:ListMultipartUploads",
                "glacier:ListProvisionedCapacity",
                "glacier:ListTagsForVault",
                "glue:BatchGetBlueprints",
                "glue:BatchGetCrawlers",
                "glue:BatchGetCustomEntityTypes",
                "glue:BatchGetDevEndpoints",
                "glue:BatchGetTriggers",
                "glue:BatchGetWorkflows",
                "glue:DescribeInboundIntegrations",
                "glue:DescribeIntegrations",
                "glue:GetBlueprint",
                "glue:GetBlueprintRuns",
                "glue:GetCatalog",
                "glue:GetCatalogImportStatus",
                "glue:GetCatalogs",
                "glue:GetClassifier",
                "glue:GetClassifiers"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyName": "PantheonFullPolicy1"
      },
      "Type": "AWS::IAM::ManagedPolicy"
    },
    "PantheonFullPolicy2": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "glue:GetConnection",
                "glue:GetConnections",
                "glue:GetCrawler",
                "glue:GetCustomEntityType",
                "glue:GetDatabase",
                "glue:GetDatabases",
                "glue:GetDataQualityRuleset",
                "glue:GetDevEndpoint",
                "glue:GetJob",
                "glue:GetJobBookmark",
                "glue:GetJobRun",
                "glue:GetJobRuns",
                "glue:GetMapping",
                "glue:GetMLTaskRun",
                "glue:GetMLTaskRuns",
                "glue:GetMLTransform",
                "glue:GetMLTransforms",
                "glue:GetPartition",
                "glue:GetPartitionIndexes",
                "glue:GetPartitions",
                "glue:GetPlan",
                "glue:GetRegistry",
                "glue:GetResourcePolicies",
                "glue:GetSchema",
                "glue:GetSchemaByDefinition",
                "glue:GetSchemaVersion",
                "glue:GetSchemaVersionsDiff",
                "glue:GetSecurityConfiguration",
                "glue:GetSecurityConfigurations",
                "glue:GetSession",
                "glue:GetTable*",
                "glue:GetTags",
                "glue:GetTrigger",
                "glue:GetTriggers",
                "glue:GetUserDefinedFunction",
                "glue:GetUserDefinedFunctions",
                "glue:GetWorkflow",
                "glue:GetWorkflowRun",
                "glue:GetWorkflowRunProperties",
                "glue:GetWorkflowRuns",
                "glue:ListBlueprints",
                "glue:ListColumnStatisticsTaskRuns",
                "glue:ListCrawlers",
                "glue:ListCrawls",
                "glue:ListCustomEntityTypes",
                "glue:ListDevEndpoints",
                "glue:ListEntities",
                "glue:ListJobs",
                "glue:ListMLTransforms",
                "glue:ListRegistries",
                "glue:ListSchemas",
                "glue:ListSchemaVersions",
                "glue:ListSessions",
                "glue:ListStatements",
                "glue:ListTriggers",
                "glue:ListWorkflows",
                "grafana:DescribeWorkspace",
                "grafana:DescribeWorkspaceAuthentication",
                "grafana:DescribeWorkspaceConfiguration",
                "grafana:ListPermissions",
                "grafana:ListTagsForResource",
                "grafana:ListWorkspaceServiceAccounts",
                "grafana:ListWorkspaceServiceAccountTokens",
                "guardduty:DescribeMalwareScans",
                "guardduty:DescribeOrganizationConfiguration",
                "health:DescribeAffectedAccountsForOrganization",
                "health:DescribeAffectedEntities",
                "health:DescribeAffectedEntitiesForOrganization",
                "health:DescribeEntityAggregates",
                "health:DescribeEventAggregates",
                "health:DescribeEventDetails",
                "health:DescribeEventDetailsForOrganization",
                "health:DescribeEvents",
                "health:DescribeEventsForOrganization",
                "health:DescribeEventTypes",
                "health:DescribeHealthServiceStatusForOrganization",
                "iam:ListOpenIDConnectProviderTags",
                "identitystore:Describe*",
                "identitystore:List*",
                "inspector2:ListMembers",
                "iot:GetBehaviorModelTrainingSummaries",
                "iot:GetCommand",
                "iot:GetEffectivePolicies",
                "iot:GetIndexingConfiguration",
                "iot:GetJobDocument",
                "iot:GetLoggingOptions",
                "iot:GetOTAUpdate",
                "iot:GetPackage",
                "iot:GetPackageConfiguration",
                "iot:GetRegistrationCode",
                "iot:GetTopicRuleDestination",
                "iot:GetV2LoggingOptions",
                "ivschat:ListLoggingConfigurations",
                "ivschat:ListRooms",
                "ivschat:ListTagsForResource",
                "kafka:GetClusterPolicy",
                "kafka:ListClusters",
                "kendra:DescribeIndex",
                "kendra:ListDataSources",
                "kendra:ListIndices",
                "kendra:ListTagsForResource",
                "kinesisanalytics:DescribeApplication",
                "kinesisanalytics:DescribeApplicationVersion",
                "kinesisanalytics:ListApplicationOperations",
                "kinesisanalytics:ListApplications",
                "kinesisanalytics:ListApplicationSnapshots",
                "kinesisanalytics:ListApplicationVersions",
                "kinesisanalytics:ListTagsForResource",
                "kinesisvideo:DescribeImageGenerationConfiguration",
                "kinesisvideo:GetSignalingChannelEndpoint",
                "kinesisvideo:ListStreams",
                "kinesisvideo:ListTagsForStream",
                "kms:GetKeyRotationStatus",
                "kms:ListResourceTags",
                "lambda:GetAlias",
                "lambda:GetCodeSigningConfig",
                "lambda:GetFunction",
                "lambda:GetFunctionCodeSigningConfig",
                "lambda:GetFunctionConcurrency",
                "lambda:GetFunctionRecursionConfig",
                "lambda:GetFunctionUrlConfig",
                "lambda:GetLayerVersion",
                "lambda:GetProvisionedConcurrencyConfig",
                "lambda:GetRuntimeManagementConfig",
                "logs:GetDelivery",
                "logs:GetDeliveryDestination",
                "logs:GetDeliveryDestinationPolicy",
                "logs:GetDeliverySource",
                "logs:GetIntegration"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyName": "PantheonFullPolicy2"
      },
      "Type": "AWS::IAM::ManagedPolicy"
    },
    "PantheonFullPolicy3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:GetLogAnomalyDetector",
                "logs:GetLogGroupFields",
                "logs:ListAnomalies",
                "logs:ListIntegrations",
                "logs:ListLogAnomalyDetectors",
                "logs:ListTagsForResource",
                "m2:GetApplication",
                "m2:GetApplicationVersion",
                "m2:GetDeployment",
                "m2:GetEnvironment",
                "m2:ListApplications",
                "m2:ListApplicationVersions",
                "m2:ListDeployments",
                "m2:ListEngineVersions",
                "m2:ListEnvironments",
                "m2:ListTagsForResource",
                "memorydb:DescribeACLs",
                "memorydb:DescribeEngineVersions",
                "memorydb:DescribeEvents",
                "memorydb:DescribeMultiRegionClusters",
                "memorydb:DescribeParameterGroups",
                "memorydb:DescribeParameters",
                "memorydb:DescribeReservedNodes",
                "memorydb:DescribeServiceUpdates",
                "memorydb:DescribeSnapshots",
                "memorydb:DescribeSubnetGroups",
                "memorydb:DescribeUsers",
                "memorydb:ListAllowedNodeTypeUpdates",
                "network-firewall:DescribeRuleGroupMetadata",
                "network-firewall:ListFirewallPolicies",
                "network-firewall:ListFirewalls",
                "network-firewall:ListRuleGroups",
                "network-firewall:ListTLSInspectionConfigurations",
                "networkmanager:DescribeGlobalNetworks",
                "networkmanager:GetConnectAttachment",
                "networkmanager:GetConnections",
                "networkmanager:GetConnectPeer",
                "networkmanager:GetConnectPeerAssociations",
                "networkmanager:GetCoreNetwork",
                "networkmanager:GetCoreNetworkPolicy",
                "networkmanager:GetCustomerGatewayAssociations",
                "networkmanager:GetDevices",
                "networkmanager:GetDirectConnectGatewayAttachment",
                "networkmanager:GetLinkAssociations",
                "networkmanager:GetLinks",
                "networkmanager:GetNetworkResourceCounts",
                "networkmanager:GetNetworkResourceRelationships",
                "networkmanager:GetNetworkResources",
                "networkmanager:GetNetworkTelemetry",
                "networkmanager:GetSites",
                "networkmanager:GetSiteToSiteVpnAttachment",
                "networkmanager:GetTransitGatewayConnectPeerAssociations",
                "networkmanager:GetTransitGatewayPeering",
                "networkmanager:GetTransitGatewayRegistrations",
                "networkmanager:GetTransitGatewayRouteTableAttachment",
                "networkmanager:GetVpcAttachment",
                "networkmanager:ListAttachments",
                "networkmanager:ListConnectPeers",
                "networkmanager:ListCoreNetworkPolicyVersions",
                "networkmanager:ListCoreNetworks",
                "networkmanager:ListPeerings",
                "profile:GetDomain",
                "profile:ListDomains",
                "profile:ListIntegrations",
                "rds:DescribeCertificates",
                "rds:DescribeDBClusterParameterGroups",
                "rds:DescribeDBClusterParameters",
                "rds:DescribeDBClusters",
                "rds:DescribeDBClusterSnapshots",
                "rds:DescribeDBEngineVersions",
                "rds:DescribeDBInstances",
                "rds:DescribeDBSubnetGroups",
                "rds:DescribeEventCategories",
                "rds:DescribeEvents",
                "rds:DescribeEventSubscriptions",
                "rds:DescribeGlobalClusters",
                "rds:DescribePendingMaintenanceActions",
                "redshift-serverless:GetNamespace",
                "redshift-serverless:GetRecoveryPoint",
                "redshift-serverless:GetSnapshot",
                "redshift-serverless:GetUsageLimit",
                "redshift-serverless:GetWorkgroup",
                "redshift-serverless:ListCustomDomainAssociations",
                "redshift-serverless:ListEndpointAccess",
                "redshift-serverless:ListManagedWorkgroups",
                "redshift-serverless:ListNamespaces",
                "redshift-serverless:ListRecoveryPoints",
                "redshift-serverless:ListScheduledActions",
                "redshift-serverless:ListSnapshotCopyConfigurations",
                "redshift-serverless:ListSnapshots",
                "redshift-serverless:ListTableRestoreStatus",
                "redshift-serverless:ListUsageLimits",
                "redshift-serverless:ListWorkgroups",
                "redshift:ListRecommendations",
                "route53-recovery-cluster:GetRoutingControlState",
                "route53-recovery-cluster:ListRoutingControls",
                "route53-recovery-control-config:DescribeCluster",
                "route53-recovery-control-config:DescribeControlPanel",
                "route53-recovery-control-config:DescribeRoutingControl",
                "route53-recovery-control-config:ListAssociatedRoute53HealthChecks",
                "route53-recovery-control-config:ListClusters",
                "route53-recovery-control-config:ListControlPanels",
                "route53-recovery-control-config:ListRoutingControls",
                "route53-recovery-control-config:ListSafetyRules",
                "route53-recovery-readiness:ListCells",
                "route53-recovery-readiness:ListCrossAccountAuthorizations",
                "route53-recovery-readiness:ListReadinessChecks",
                "route53-recovery-readiness:ListRecoveryGroups",
                "route53-recovery-readiness:ListResourceSets",
                "route53-recovery-readiness:ListRules",
                "route53domains:GetContactReachabilityStatus",
                "route53domains:ListPrices",
                "s3:GetAccessGrantsInstance",
                "s3:GetAccessGrantsInstanceResourcePolicy",
                "s3:GetAccessPointConfigurationForObjectLambda",
                "s3:GetAccessPointForObjectLambda",
                "s3:GetAccessPointPolicyForObjectLambda",
                "s3:GetAccessPointPolicyStatusForObjectLambda",
                "s3:GetBucketNotification",
                "s3:GetBucketPublicAccessBlock",
                "s3:GetMultiRegionAccessPoint",
                "s3:GetMultiRegionAccessPointPolicy",
                "s3:GetMultiRegionAccessPointPolicyStatus",
                "s3:GetStorageLensConfiguration",
                "s3:GetStorageLensConfigurationTagging",
                "s3:ListAccessGrants",
                "s3:ListAccessGrantsInstances",
                "s3:ListAccessGrantsLocations",
                "s3:ListAccessPointsForObjectLambda",
                "s3:ListBuckets",
                "s3:ListCallerAccessGrants",
                "s3:ListDirectoryBuckets",
                "s3:ListJobs",
                "s3:ListMultiRegionAccessPoints",
                "s3:ListStorageLensConfigurations",
                "s3:ListStorageLensGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyName": "PantheonFullPolicy3"
      },
      "Type": "AWS::IAM::ManagedPolicy"
    },
    "PantheonFullPolicy4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:GetLineageGroupPolicy",
                "sagemaker:GetModelPackageGroupPolicy",
                "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
                "ses:DescribeActiveReceiptRuleSet",
                "ses:GetAccount",
                "ses:GetConfigurationSet",
                "ses:GetConfigurationSetEventDestinations",
                "ses:GetContactList",
                "ses:GetDedicatedIpPool",
                "ses:GetDedicatedIps",
                "ses:GetDeliverabilityDashboardOptions",
                "ses:GetEmailIdentity",
                "ses:GetIdentityMailFromDomainAttributes",
                "ses:GetIdentityNotificationAttributes",
                "ses:GetSendQuota",
                "ses:GetSendStatistics",
                "ses:ListConfigurationSets",
                "ses:ListContactLists",
                "ses:ListContacts",
                "ses:ListCustomVerificationEmailTemplates",
                "ses:ListDedicatedIpPools",
                "ses:ListDeliverabilityTestReports",
                "ses:ListEmailIdentities",
                "ses:ListEmailTemplates",
                "ses:ListExportJobs",
                "ses:ListImportJobs",
                "ses:ListMultiRegionEndpoints",
                "ses:ListReceiptFilters",
                "ses:ListRecommendations",
                "ses:ListSuppressedDestinations",
                "ses:ListTemplates",
                "ssm:GetOpsItem",
                "ssm-sap:GetApplication",
                "ssm-sap:GetComponent",
                "ssm-sap:GetDatabase",
                "ssm-sap:GetResourcePermission",
                "ssm-sap:ListApplications",
                "ssm-sap:ListComponents",
                "ssm-sap:ListDatabases",
                "ssm-sap:ListTagsForResource",                
        				"states:ListStateMachineVersions",
        				"states:DescribeActivity",
        				"states:ListStateMachines",
        				"states:DescribeStateMachine",
        				"states:ListActivities",
        				"states:ListExecutions",
        				"states:DescribeStateMachineAlias",
        				"states:ValidateStateMachineDefinition",
        				"states:DescribeStateMachineForExecution",
        				"states:ListStateMachineAliases",
        				"states:RevealSecrets",
        				"states:DescribeExecution",
        				"states:GetExecutionHistory",
        				"states:DescribeMapRun",
        				"states:ListMapRuns",
        				"states:ListTagsForResource",
                "sms-voice:DescribeOptedOutNumbers",
                "sms-voice:DescribePhoneNumbers",
                "sms-voice:DescribeSpendLimits",
                "sms-voice:DescribeVerifiedDestinationNumbers",
                "sns:GetEndpointAttributes",
                "sns:GetSMSAttributes",
                "sns:GetSMSSandboxAccountStatus",
                "sns:GetSubscriptionAttributes",
                "sns:ListEndpointsByPlatformApplication",
                "sns:ListOriginationNumbers",
                "sns:ListPhoneNumbersOptedOut",
                "sns:ListPlatformApplications",
                "sns:ListSMSSandboxPhoneNumbers",
                "ssm-sap:GetApplication",
                "ssm-sap:GetComponent",
                "ssm-sap:GetDatabase",
                "ssm-sap:GetResourcePermission",
                "ssm-sap:ListApplications",
                "ssm-sap:ListComponents",
                "ssm-sap:ListDatabases",
                "ssm-sap:ListOperations",
                "ssm-sap:ListTagsForResource",
                "ssm:GetDefaultPatchBaseline",
                "ssm:GetDocument",
                "ssm:GetInventory",
                "ssm:GetInventorySchema",
                "ssm:GetOpsItem",
                "ssm:GetOpsMetadata",
                "ssm:GetOpsSummary",
                "ssm:ListCommandInvocations",
                "ssm:ListNodes",
                "ssm:ListOpsItemEvents",
                "ssm:ListOpsItemRelatedItems",
                "sso-directory:Describe*",
                "sso-directory:ListMembersInGroup",
                "states:DescribeMapRun",
                "states:DescribeStateMachineAlias",
                "states:DescribeStateMachineForExecution",
                "states:ListActivities",
                "states:ListExecutions",
                "states:ListMapRuns",
                "states:ListStateMachineAliases",
                "states:ListStateMachineVersions",
                "timestream:DescribeDatabase",
                "timestream:DescribeEndpoints",
                "timestream:ListBatchLoadTasks",
                "timestream:ListDatabases",
                "timestream:ListTables",
                "timestream:ListTagsForResource",
                "voiceid:DescribeDomain",
                "waf-regional:GetByteMatchSet",
                "waf-regional:GetGeoMatchSet",
                "waf-regional:GetIPSet",
                "waf-regional:GetLoggingConfiguration",
                "waf-regional:GetPermissionPolicy",
                "waf-regional:GetRateBasedRule",
                "waf-regional:GetRateBasedRuleManagedKeys",
                "waf-regional:GetRegexMatchSet",
                "waf-regional:GetRegexPatternSet",
                "waf-regional:GetRule",
                "waf-regional:GetRuleGroup",
                "waf-regional:GetSizeConstraintSet",
                "waf-regional:GetSqlInjectionMatchSet",
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetXssMatchSet",
                "waf-regional:ListActivatedRulesInRuleGroup",
                "waf-regional:ListByteMatchSets",
                "waf-regional:ListGeoMatchSets",
                "waf-regional:ListIPSets",
                "waf-regional:ListLoggingConfigurations",
                "waf-regional:ListRateBasedRules",
                "waf-regional:ListRegexMatchSets",
                "waf-regional:ListRegexPatternSets",
                "waf-regional:ListRuleGroups",
                "waf-regional:ListRules",
                "waf-regional:ListSizeConstraintSets",
                "waf-regional:ListSqlInjectionMatchSets",
                "waf-regional:ListSubscribedRuleGroups",
                "waf-regional:ListXssMatchSets",
                "waf:ListActivatedRulesInRuleGroup",
                "waf:ListByteMatchSets",
                "waf:ListGeoMatchSets",
                "waf:ListIPSets",
                "waf:ListLoggingConfigurations",
                "waf:ListRateBasedRules",
                "waf:ListRegexMatchSets",
                "waf:ListRegexPatternSets",
                "waf:ListRuleGroups",
                "waf:ListRules",
                "waf:ListSizeConstraintSets",
                "waf:ListSqlInjectionMatchSets",
                "waf:ListSubscribedRuleGroups",
                "waf:ListXssMatchSets",
                "wafv2:GetLoggingConfiguration",
                "wafv2:GetPermissionPolicy",
                "wafv2:GetRuleGroup",
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:ListTagsForResource",
                "wafv2:ListWebACLs",
                "wisdom:GetAssistant",
                "workspaces:DeployWorkspaceApplications",
                "workspaces:GetAccountLink",
                "workspaces:ListAccountLinks",
                "xray:GetIndexingRules",
                "xray:GetSamplingStatisticSummaries",
                "xray:GetTraceSegmentDestination",
                "xray:ListResourcePolicies"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyName": "PantheonFullPolicy4"
      },
      "Type": "AWS::IAM::ManagedPolicy"
    }
  }
}
